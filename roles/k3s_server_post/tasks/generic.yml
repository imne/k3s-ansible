---
- name: install longhorn
  command: >-
    k3s kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/{{ longhorn_version }}/deploy/longhorn.yaml
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Wait for longhorn-system to finish installing resources
  command: >-
    k3s kubectl get po -o json -n longhorn-system
  changed_when: false
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  run_once: true
  retries: 35

- name: Copy postgres.yaml to master
  template:
    src: "postgres.yaml.j2"
    dest: "/tmp/k3s/postgres.yaml"
    owner: "{{ ansible_user_id }}"
    mode: 0755
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true

- name: Copy keycloak.yaml to master
  template:
    src: "keycloak.yaml.j2"
    dest: "/tmp/k3s/keycloak.yaml"
    owner: "{{ ansible_user_id }}"
    mode: 0755
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true

- name: Add Helm Repos & create namespaces
  command: "{{ item }}"
  register: this
  changed_when: false
  with_items:
  - helm repo add traefik https://traefik.github.io/charts
  - helm repo add bitnami https://charts.bitnami.com/bitnami
  - helm repo update
  - k3s kubectl create namespace traefik
  - k3s kubectl create namespace harbor
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Install traefik 
  command: >-
    helm install --namespace=traefik --set providers.kubernetesCRD.enabled=true --set rbac.enabled=true --set ports.web.redirectTo.port=websecure --set ports.websecure.tls.enabled=true --set providers.kubernetesIngress.publishedService.enabled=true --set="additionalArguments={--api.dashboard=true,--log.level=DEBUG,--serversTransport.insecureSkipVerify=true}" traefik traefik/traefik
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Setup Postgres DB
  command: >-
    k3s kubectl apply -f /tmp/k3s/postgres.yaml
  register: this
  changed_when: false
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Wait for Postgress resources
  command: >-
    k3s kubectl get po -o json -n postgresql
  changed_when: false
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  run_once: true
  retries: 35

- name: Postgres data backup download
  command: "{{ item }}"
  register: this
  changed_when: false
  with_items:
  - rm -rf /backup
  - mkdir /backup
  - aws s3 cp s3://k8s-backup-homelab/postgres/db_backup_latest.sql /backup/db_backup_latest.sql
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Postgres data backup restore
  shell: >-
    cat /backup/db_backup_latest.sql | k3s kubectl -n postgresql exec -it postgresql-0 -- psql -U admin -d dev
  register: this
  changed_when: false
  run_once: true
  until: this.rc == 0
  retries: 1

- name: Delete postgress backup file
  command: >-
    rm -rf /backup
  register: this
  changed_when: false
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Setup keycloak 
  command: >-
    k3s kubectl apply -f /tmp/k3s/keycloak.yaml
  register: this
  changed_when: false
  run_once: true
  until: this.rc == 0
  retries: 5

#helm install --namespace harbor --set ingress.core.hostname=harbor.kwamlng.dev --set exposureType=ingress --set service.type=ClusterIP --set persistence.enabled=true  --set persistence.persistentVolumeClaim.registry.size=25Gi --set externalURL=https://harbor.kwamlng.dev --set externalDatabase.host=postgresql.postgresql.svc.cluster.local --set externalDatabase.password=passwd1 --set externalDatabase.port=5432 --set externalDatabase.user=harbor --set externalDatabase.sslmode=disable --set externalDatabase.coreDatabase=dev --set postgresql.enabled=false --set adminPassword=passwd harbor bitnami/harbor
- name: Setup Harbor 
  command: >-
    helm install 
    --namespace harbor 
    --set ingress.core.hostname=harbor.{{ cluster_domain }} 
    --set exposureType=ingress 
    --set service.type=ClusterIP 
    --set persistence.enabled=true 
    --set persistence.persistentVolumeClaim.registry.size={{ harbor_storage_size }} 
    --set externalURL=https://harbor.{{ cluster_domain }} 
    --set externalDatabase.host=postgresql.postgresql.svc.cluster.local 
    --set externalDatabase.password={{ postgres_password }} 
    --set externalDatabase.port=5432 
    --set externalDatabase.user=harbor 
    --set externalDatabase.sslmode=disable 
    --set externalDatabase.coreDatabase=dev 
    --set postgresql.enabled=false 
    --set adminPassword={{ externaldns_password }} 
    harbor bitnami/harbor
  register: this
  changed_when: false
  run_once: true
  until: this.rc == 0
  retries: 5