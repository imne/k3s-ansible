---
- name: install longhorn
  command: >-
    k3s kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/{{ longhorn_version }}/deploy/longhorn.yaml
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Wait for longhorn-system to finish installing resources
  command: >-
    k3s kubectl get po -o json -n longhorn-system
  changed_when: false
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  run_once: true
  retries: 35

- name: Add traefik helm repo
  command: >-
    helm repo add traefik https://traefik.github.io/charts
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Add Jenkins helm repo
  command: >-
    helm repo add jenkins https://charts.jenkins.io
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Add helm repo update
  command: >-
    helm repo update
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Create traefik namespace
  command: >-
    k3s kubectl create namespace traefik
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Create Jenkins namespace
  command: >-
    k3s kubectl create namespace jenkins
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Install traefik 
  command: >-
    helm install --namespace=traefik --set="additionalArguments={--api.dashboard=true,--log.level=DEBUG,--serversTransport.insecureSkipVerify=true}" traefik traefik/traefik
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Install Jenkins 
  command: >-
    helm install --namespace=jenkins jenkins jenkins/jenkins
  register: this
  changed_when: false
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Copy postgres.yaml to master
  template:
    src: "postgres.yaml.j2"
    dest: "/tmp/k3s/postgres.yaml"
    owner: "{{ ansible_user_id }}"
    mode: 0755
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true

- name: Setup Postgres DB
  command: >-
    k3s kubectl apply -f /tmp/k3s/postgres.yaml
  register: this
  changed_when: false
  run_once: true
  until: this.rc == 0
  retries: 5

- name: Wait for Postgress resources
  command: >-
    k3s kubectl get po -o json -n postgresql
  changed_when: false
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  run_once: true
  retries: 35

#TODO - Add postgress DB restore and user creation

- name: Copy keycloak.yaml to master
  template:
    src: "keycloak.yaml.j2"
    dest: "/tmp/k3s/keycloak.yaml"
    owner: "{{ ansible_user_id }}"
    mode: 0755
  with_items: "{{ groups[group_name_master | default('master')] }}"
  run_once: true

- name: Setup keycloak 
  command: >-
    k3s kubectl apply -f /tmp/k3s/keycloak.yaml
  register: this
  changed_when: false
  run_once: true
  until: this.rc == 0
  retries: 5